stages:
  - deploy
  - notification

cache:
  paths:
    - backend/node_modules/

deploy:
  stage: deploy
  only:
    - production # —Ç–æ–ª—å–∫–æ –¥–ª—è —ç—Ç–æ–π –≤–µ—Ç–∫–∏
  script:
    - sh deploy/.ci-notify.sh "–°–æ–±–∏—Ä–∞—é –ø—Ä–æ–µ–∫—Ç –ø–∞—Ä—Å–µ—Ä ‚ò∫Ô∏è" $TELEGRAM_BOT_TOKEN $TELEGRAM_CHAT_ID || true
    - docker-compose stop rate
    - docker-compose build --pull
    - sh deploy/.ci-notify.sh "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã ü•≥" $TELEGRAM_BOT_TOKEN $TELEGRAM_CHAT_ID || true
    - docker-compose down --remove-orphans
    - docker-compose up -d --no-build
    - sh deploy/.ci-notify.sh "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω—ã! ü•∞" $TELEGRAM_BOT_TOKEN $TELEGRAM_CHAT_ID || true
    - docker image prune -f
  when: always
  except:
    - master # –∏—Å–∫–ª—é—á–∏—Ç—å –≤–µ—Ç–∫–∏
  tags:
    - docker

notify_error:
  stage: notification
  only:
    - production
  tags:
    - docker
  script:
    - sh deploy/.ci-notify.sh "–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫... üòî"
    - docker-compose start rate
  when: on_failure